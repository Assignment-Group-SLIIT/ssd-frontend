{"version":3,"sources":["message.service.js"],"names":["_API","_interopRequireDefault","require","createMessage","userPayload","response","regeneratorRuntime","async","_context","prev","next","console","log","awrap","API","post","sent","status","abrupt","ok","data","t0","err","stop","getAllMessages","_context2","get","concat","email","_context3"],"mappings":"qJAAA,IAAAA,KAAAC,uBAAAC,QAAA,kFAEO,IAAMC,cAAgB,SAAOC,GAAP,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAC7BC,QAAQC,IAAI,eAAiBR,GADAI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAO,MAGEC,KAAAA,QAAIC,KAAK,YAAaX,IAHxB,KAAA,EAAA,GAIG,OADlBC,EAHeG,EAAAQ,MAIRC,OAJQ,OAAAT,EAAAU,OAAA,SAF7B,CAQgBC,IAAI,EACJC,KAAMf,EAASe,OAPFZ,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAAF,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,MAAA,GAAAA,EAAAU,OAAA,SAAA,CAAAC,IAAA,EAAAG,IAAAd,EAAAa,GAAAD,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAZ,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,0CAAA,IAAAC,eAAA,WAAA,IAAAnB,EAAA,OAAAC,mBAAAC,MAAA,SAAAkB,GAAA,OAAA,OAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,KAAA,EAAA,OAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAAAJ,mBAAAO,MAAAC,KAAAA,QAAAY,IAAA,cAAA,KAAA,EAAA,GAmBG,OAnBHrB,EAAAoB,EAAAT,MAmBRC,OAnBQ,OAAAQ,EAAAP,OAAA,SAAA,CAGfb,IAHe,EAsBbe,KAAMf,EAASe,OAtBFK,EAAAf,KAAA,EAAA,MAAA,KAAA,EAAAe,EAAAf,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAe,EAAAhB,KAAA,EAAAgB,EAAAJ,GAAAI,EAAA,MAAA,GAAAA,EAAAP,OAAA,SAAA,CAAAC,IAAA,EAAAG,IAAAG,EAAAJ,GAAAD,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAF,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,4CAObH,IAAAA,qBAAeA,SAAAA,GAAAA,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAyBAN,KAAAA,QAAIY,IAAJ,YAAAC,OAAoBC,KAzBpBR,KAAAA,EAAAA,GAPF,OAgCff,EAzBiBe,EAAAA,MAPFH,OAOEG,OAAAA,EAAAA,OAAAA,SAPF,CAAAD,IAAA,EAoCbC,KAAMf,EAASe,OA7BAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAAAA,EAAAA,OAAAA,SAPF,CAAAD,IAAA,EAAAG,IAAAO,EAAAR,GAAAD,OAOEA,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA","file":"message.service.min.js","sourcesContent":["import API from \"./API\";\r\n\r\nexport const createMessage = async (userPayload) => {\r\nconsole.log(\"userPayload \" , userPayload)\r\n    try {\r\n        const response = await API.post(\"messages/\", userPayload);\r\n        if (response.status === 201) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        return { ok: false, err: error.data }\r\n    }\r\n\r\n}\r\n\r\nexport const getAllMessages = async () => {\r\n    try {\r\n        const response = await API.get(\"messages/\")\r\n        if (response.status === 200) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        return { ok: false, err: error.data }\r\n    }\r\n}\r\n\r\nexport const getAllMessagesofUser = async (email) => {\r\n    try {\r\n        const response = await API.get(`messages/${email}`)\r\n        if (response.status === 200) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        return { ok: false, err: error.data }\r\n    }\r\n}"]}