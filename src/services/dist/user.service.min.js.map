{"version":3,"sources":["user.service.js"],"names":["_token","require","_API","_interopRequireDefault","registerUser","userPayload","response","regeneratorRuntime","async","_context","prev","next","awrap","API","post","sent","status","abrupt","ok","data","t0","err","stop","loginUser","user","_context2","token","getAllUsers","_context3","get"],"mappings":"sIAAA,IAAAA,OAAAC,QAAA,kBACAC,KAAAC,uBAAAF,QAAA,kFAEO,IAAMG,aAAe,SAAOC,GAAP,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAGGC,KAAAA,QAAIC,KAAK,iBAAkBT,IAH9B,KAAA,EAAA,GAH5B,OAMcC,EAHcG,EAAAM,MAH5BC,OAG4B,OAAAP,EAAAQ,OAAA,SAKT,CAPnBC,IAAA,EASgBC,KAAMb,EAASa,OAPHV,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAAF,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAAAA,EAAAQ,OAAA,SAAA,CAAAC,IAAA,EAAAG,IAAAZ,EAAAW,GAAAD,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAAa,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,wCAAA,IAAAC,UAAA,SAAAC,GAAA,IAAAlB,EAAA,OAAAC,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAAAJ,mBAAAK,MAmBGC,KAAAA,QAAIC,KAAK,cAAeU,IAnB3B,KAAA,EAAA,GAAA,OAmBdlB,EAnBcmB,EAAAV,MAAAC,OAAA,OAGdV,EAAAA,OAAAA,gBAHcA,EAAAa,KAAAO,MAAApB,EAAAa,MAAAM,EAAAR,OAAA,SAsBT,CAlBPX,IAAAA,EAJgBa,KAAAb,EAAAa,OAAAM,EAAAd,KAAA,EAAA,MAAA,KAAA,EAAAc,EAAAd,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAc,EAAAf,KAAA,EAAAe,EAAAL,GAAAK,EAAA,MAAA,GAAAA,EAAAR,OAAA,SAMV,CAAEC,IADD,EAAAG,IAAAI,EAAAL,GAAAD,OALS,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,kCAAA,IAAAK,YAAA,WAAA,IAAArB,EAAA,OAAAC,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAAAC,KAAAA,QAAAgB,IAAA,WAAA,KAAA,EAAA,GAoCI,OApCJvB,EAAAsB,EAAAb,MAoCPC,OApCO,OAAAY,EAAAX,OAAA,SAAA,CAAAC,IAAA,EAAAC,KAAAb,EAAAa,OAAAS,EAAAjB,KAAA,EAAA,MAAA,KAAA,EAAAiB,EAAAjB,KAAA,GAAA,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAAAkB,EAAAR,GAAAQ,EAAA,MAAA,GAAAA,EAAAX,OAAA,SAAA,CAAAC,IAAA,EAAAG,IAAAO,EAAAR,GAAAD,OAAA,KAAA,GAAA,IAAA,MAAA,OAAAS,EAAAN,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"user.service.min.js","sourcesContent":["import { setUserSession } from \"../utils/token\";\r\nimport API from \"./API\";\r\n\r\nexport const registerUser = async (userPayload) => {\r\n\r\n    try {\r\n        const response = await API.post(\"users/register\", userPayload);\r\n        if (response.status === 201) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        return { ok: false, err: error.data }\r\n    }\r\n\r\n}\r\n\r\nexport const loginUser = async (user) => {\r\n\r\n    try {\r\n        const response = await API.post(\"users/login\", user)\r\n        if (response.status === 200) {\r\n            setUserSession(response.data.token, response.data)\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        return { ok: false, err: error.data }\r\n    }\r\n}\r\n\r\nexport const getAllUsers = async () => {\r\n    try {\r\n        const response = await API.get(\"users/\")\r\n        if (response.status === 200) {\r\n            return {\r\n                ok: true,\r\n                data: response.data\r\n            }\r\n        }\r\n    } catch (error) {\r\n        return { ok: false, err: error.data }\r\n    }\r\n}"]}